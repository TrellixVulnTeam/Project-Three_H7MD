{"version":3,"sources":["webpack:///src/app/youtube/youtube.component.ts","webpack:///src/app/youtube/youtube.component.html","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/environments/environment.ts","webpack:///src/app/wikipedia/wikipedia.component.ts","webpack:///src/app/wikipedia/wikipedia.component.html","webpack:///src/app/wikipedia-data.service.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/spotify/spotify.component.ts","webpack:///src/app/spotify/spotify.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/twitter-feed/twitter-feed.component.ts","webpack:///src/app/twitter-feed/twitter-feed.component.html","webpack:///src/app/app-routing.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["YoutubeComponent","NavBarComponent","environment","production","WikipediaComponent","wikipediaService","extract_html","timestamp","thumbnail","source","width","height","getRequest","subscribe","data","WikipediaDataService","http","WIKI_URL","get","observe","responseType","AppComponent","title","SpotifyComponent","AppModule","TwitterFeedComponent","routes","AppRoutingModule","forRoot","bootstrapModule","err","console","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-youtube',\n  templateUrl: './youtube.component.html',\n  styleUrls: ['./youtube.component.css']\n})\nexport class YoutubeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n  <!-- Card title -->\n  <div class=\"widget-title\"><a href=\"https://www.youtube.com/channel/UCLkAepWjdylmXSltofFvsYQ\">YouTube</a></div>\n  <!-- Youtube container -->\n  <div class=\"youtube-video-container\">\n    <iframe\n      src=\"https://www.youtube.com/embed?max-results=1&controls=0&showinfo=0&rel=0&listType=user_uploads&list=BANGTANTV\"\n      allowfullscreen\n    >\n    </iframe>\n  </div>\n  <!-- Timestamp -->\n  <div class=\"timestamp\">Updated on \"Holder\"</div>\n</body>\n\n<!-- Youtube Script -->\n<script>\n  // 2. This code loads the IFrame Player API code asynchronously.\n  var tag = document.createElement(\"script\");\n\n  tag.src = \"https://www.youtube.com/iframe_api\";\n  var firstScriptTag = document.getElementsByTagName(\"script\")[0];\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n  // 3. This function creates an <iframe> (and YouTube player)\n  //    after the API code downloads.\n  var player;\n  function onYouTubeIframeAPIReady() {\n    player = new YT.Player(\"player\", {\n      videoId: \"M7lc1UVf-VE\",\n      events: {\n        onReady: onPlayerReady,\n        onStateChange: onPlayerStateChange,\n      },\n    });\n  }\n\n  // 4. The API will call this function when the video player is ready.\n  function onPlayerReady(event) {\n    event.target.playVideo();\n  }\n\n  // 5. The API calls this function when the player's state changes.\n  //    The function indicates that when playing a video (state=1),\n  //    the player should play for six seconds and then stop.\n  var done = false;\n  function onPlayerStateChange(event) {\n    if (event.data == YT.PlayerState.PLAYING && !done) {\n      setTimeout(stopVideo, 6000);\n      done = true;\n    }\n  }\n  function stopVideo() {\n    player.stopVideo();\n  }\n</script>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Creates the header. -->\n<div class=\"header\">\n  <!-- Site icon and name. -->\n  <img src=\"assets/images/bts-verse-logo.png\" alt=\"Logo\" /> BTS-VERSE\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Config } from './config';\nimport { Component, OnInit } from '@angular/core';\nimport { WikipediaDataService } from 'src/app/wikipedia-data.service'\n\n@Component({\n  selector: 'app-wikipedia',\n  templateUrl: './wikipedia.component.html',\n  styleUrls: ['./wikipedia.component.css'],\n})\n\nexport class WikipediaComponent implements OnInit {\n  extract_html: string;\n  timestamp: string;\n  thumbnail: {\n    source: string;\n    width: number;\n  height: number;\n  };\n\n\n  constructor(private wikipediaService : WikipediaDataService) {\n    this.extract_html = 'error - unable to retrieve data';\n    this.timestamp = 'error - unable to retrieve data';\n    this.thumbnail = {\n      source: 'error - unable to retrieve data',\n      width: 0,\n      height: 0,\n    }\n  }\n\n  ngOnInit() {\n    this.wikipediaService.getRequest().subscribe((data: Config) => {\n    this.thumbnail = data.thumbnail, this.extract_html = data.extract_html, this.timestamp = data.timestamp});\n  }\n\n}\n","<body>\n  <!-- Card title. -->\n  <div class=\"widget-title\">\n    <a href=\"https://en.wikipedia.org/wiki/BTS\">BTS</a>\n  </div>\n  <blockquote class=\"summary\">From Wikipedia, the free encyclopedia</blockquote>\n  <!-- Article body. -->\n  <div class=\"article\">\n    <img class=\"text-wrap\" src=\"{{ thumbnail.source }}\" />\n    <div [innerHTML]=\"extract_html\"></div>\n  </div>\n  <!-- Timestamp of retrevial. -->\n  <div class=\"timestamp\">Retrieved on {{ timestamp }}</div>\n</body>\n","import { Config } from './wikipedia/config';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientJsonpModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class WikipediaDataService {\n\n  private WIKI_URL = \"https://en.wikipedia.org/api/rest_v1/page/summary/BTS\";\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  public getRequest() {\n    return this.http.get<Config>(this.WIKI_URL, {observe: 'body', responseType: 'json'});\n  }\n\n}\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bts-verse';\n}\n","<body>\n  <app-nav-bar></app-nav-bar>\n  <div class=\"row\">\n    <div class=\"column\">\n      <app-youtube></app-youtube>\n      <br />\n      <app-wikipedia></app-wikipedia>\n    </div>\n    <div class=\"column\">\n      <app-spotify></app-spotify>\n      <br />\n      <app-twitter-feed></app-twitter-feed>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spotify',\n  templateUrl: './spotify.component.html',\n  styleUrls: ['./spotify.component.css']\n})\nexport class SpotifyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n  <!-- Component title. -->\n  <div class=\"widget-title\">\n    <a href=\"https://open.spotify.com/artist/3Nrfpe0tUJi4K4DXYWgMUX\">Spotify</a>\n  </div>\n  <!-- Spotify embed. -->\n  <div class=\"spotify-container\">\n    <iframe\n      src=\"https://open.spotify.com/embed/artist/3Nrfpe0tUJi4K4DXYWgMUX\"\n      frameborder=\"0\"\n      allowtransparency=\"true\"\n      allow=\"encrypted-media\"\n    >\n    </iframe>\n  </div>\n  <!-- Timestamp -->\n  <div class=\"timestamp\">Updated on \"Holder\"</div>\n</body>\n","import { WikipediaDataService } from 'src/app/wikipedia-data.service';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TwitterFeedComponent } from './twitter-feed/twitter-feed.component';\nimport { YoutubeComponent } from './youtube/youtube.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { WikipediaComponent } from './wikipedia/wikipedia.component';\nimport { SpotifyComponent } from './spotify/spotify.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TwitterFeedComponent,\n    YoutubeComponent,\n    NavBarComponent,\n    WikipediaComponent,\n    SpotifyComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [WikipediaDataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-twitter-feed',\n  templateUrl: './twitter-feed.component.html',\n  styleUrls: ['./twitter-feed.component.css']\n})\nexport class TwitterFeedComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n  <div class=\"widget-title\"><a href=\"https://twitter.com/BTS_twt\">Twitter</a></div>\n  <h4>\n    <a\n      class=\"twitter-timeline\"\n      href=\"https://twitter.com/BTS_twt?ref_src=twsrc%5Etfw\"\n      >Tweets by BTS_twt</a\n    >\n    <script\n      async\n      src=\"https://platform.twitter.com/widgets.js\"\n      charset=\"utf-8\"\n    ></script>\n    Tweet\n  </h4>\n  <br />\n  <script>\n    !(function (d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0],\n        p = /^http:/.test(d.location) ? \"http\" : \"https\";\n      if (!d.getElementById(id)) {\n        js = d.createElement(s);\n        js.id = id;\n        js.src = p + \"://platform.twitter.com/widgets.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }\n    })(document, \"script\", \"twitter-wjs\");\n  </script>\n</body>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}