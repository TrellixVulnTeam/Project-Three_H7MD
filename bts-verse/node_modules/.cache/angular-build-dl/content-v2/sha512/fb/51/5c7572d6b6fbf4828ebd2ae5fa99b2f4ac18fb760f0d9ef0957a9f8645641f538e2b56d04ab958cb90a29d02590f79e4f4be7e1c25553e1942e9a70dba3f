{"version":3,"sources":["./src/app/youtube/youtube.component.ts","./src/app/youtube/youtube.component.html","./src/app/twitter-feed/twitterservice.service.ts","./src/app/nav-bar/nav-bar.component.ts","./src/app/nav-bar/nav-bar.component.html","./src/environments/environment.ts","./src/app/wikipedia/wikipedia.component.ts","./src/app/wikipedia/wikipedia.component.html","./src/app/wikipedia-data.service.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/spotify/spotify.component.ts","./src/app/spotify/spotify.component.html","./src/app/app.module.ts","./src/app/twitter-feed/twitter-feed.component.html","./src/app/twitter-feed/twitter-feed.component.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-youtube',\n  templateUrl: './youtube.component.html',\n  styleUrls: ['./youtube.component.css']\n})\nexport class YoutubeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n  <!-- Card title -->\n  <div class=\"widget-title\"><a href=\"https://www.youtube.com/channel/UCLkAepWjdylmXSltofFvsYQ\" title=\"BTS's YouTube Page\">YouTube</a></div>\n  <!-- Youtube container -->\n  <div class=\"youtube-video-container\">\n    <iframe\n      src=\"https://www.youtube.com/embed?max-results=1&controls=0&showinfo=0&rel=0&listType=user_uploads&list=BANGTANTV\"\n      allowfullscreen\n    >\n    </iframe>\n  </div>\n  <!-- Timestamp -->\n  <div class=\"timestamp\">Updated on \"Holder\"</div>\n</body>\n\n<!-- Youtube Script -->\n<script>\n  // 2. This code loads the IFrame Player API code asynchronously.\n  var tag = document.createElement(\"script\");\n\n  tag.src = \"https://www.youtube.com/iframe_api\";\n  var firstScriptTag = document.getElementsByTagName(\"script\")[0];\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n  // 3. This function creates an <iframe> (and YouTube player)\n  //    after the API code downloads.\n  var player;\n  function onYouTubeIframeAPIReady() {\n    player = new YT.Player(\"player\", {\n      videoId: \"M7lc1UVf-VE\",\n      events: {\n        onReady: onPlayerReady,\n        onStateChange: onPlayerStateChange,\n      },\n    });\n  }\n\n  // 4. The API will call this function when the video player is ready.\n  function onPlayerReady(event) {\n    event.target.playVideo();\n  }\n\n  // 5. The API calls this function when the player's state changes.\n  //    The function indicates that when playing a video (state=1),\n  //    the player should play for six seconds and then stop.\n  var done = false;\n  function onPlayerStateChange(event) {\n    if (event.data == YT.PlayerState.PLAYING && !done) {\n      setTimeout(stopVideo, 6000);\n      done = true;\n    }\n  }\n  function stopVideo() {\n    player.stopVideo();\n  }\n</script>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/internal/operators/map';\n\n @Injectable({\n   providedIn: 'root'\n })\nexport class TwitterService {\n\n  api_url = 'http://localhost:3000';\n  constructor(private http: HttpClient) {}\n\n\n    getTimeline(){\n      console.log(\"hello\");\n      return this.http\n      .get<any[]>(this.api_url + '/user_timeline', {responseType: 'json'})\n      .pipe(map(data => data));\n\n    }\n   \n\n   getMentions(){\n     return this.http\n      .get<any[]>(this.api_url + '/mentions_timeline')\n      .pipe(map(data => data));\n   }\n  }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- Creates the header. -->\n<div class=\"header\">\n  <!-- Site icon and name. -->\n  <img src=\"assets/images/bts-verse-logo.png\" alt=\"Logo\" /> BTS-VERSE\n</div>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Config } from \"./config\";\nimport { Component, OnInit } from \"@angular/core\";\nimport { WikipediaDataService } from \"src/app/wikipedia-data.service\";\n\n@Component({\n  selector: \"app-wikipedia\",\n  templateUrl: \"./wikipedia.component.html\",\n  styleUrls: [\"./wikipedia.component.css\"],\n})\nexport class WikipediaComponent implements OnInit {\n  extract_html: string;\n  timestamp: string;\n  thumbnail: {\n    source: string;\n    width: number;\n    height: number;\n  };\n\n  constructor(private wikipediaService: WikipediaDataService) {\n    /** Default values are set to errors in case the HTTP request is unsuccessful. */\n    this.extract_html = \"error - unable to retrieve data\";\n    this.timestamp = \"error - unable to retrieve data\";\n    this.thumbnail = {\n      source: \"error - unable to retrieve data\",\n      width: 0,\n      height: 0,\n    };\n  }\n\n  ngOnInit() {\n    /** Get the request from the wikipedia service and assign data to the Config interface for parsing. */\n    this.wikipediaService.getRequest().subscribe((data: Config) => {\n      (this.thumbnail = data.thumbnail),\n        (this.extract_html = data.extract_html),\n        (this.timestamp = data.timestamp);\n    });\n  }\n}\n","<body>\n  <!-- Card title. -->\n  <div class=\"widget-title\">\n    <a href=\"https://en.wikipedia.org/wiki/BTS\" title=\"BTS's Wikipedia Page\">BTS</a>\n  </div>\n  <blockquote class=\"summary\">From Wikipedia, the free encyclopedia</blockquote>\n  <!-- Article body. -->\n  <div class=\"article\">\n    <img class=\"text-wrap\" alt=\"Image of BTS\" src=\"{{ thumbnail.source }}\" />\n    <div [innerHTML]=\"extract_html\"></div>\n  </div>\n  <!-- Timestamp of retrevial. -->\n  <div class=\"timestamp\">Retrieved on {{ timestamp }}</div>\n</body>\n","import { Config } from './wikipedia/config';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientJsonpModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class WikipediaDataService {\n\n  private WIKI_URL = \"https://en.wikipedia.org/api/rest_v1/page/summary/BTS\";\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  public getRequest() {\n    return this.http.get<Config>(this.WIKI_URL, {observe: 'body', responseType: 'json'});\n  }\n\n}\n\n\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bts-verse';\n}\n","<body>\n  <app-nav-bar></app-nav-bar>\n  <div class=\"row\">\n    <div class=\"column\">\n      <app-youtube></app-youtube>\n      <br />\n      <app-wikipedia></app-wikipedia>\n    </div>\n    <div class=\"column\">\n      <app-spotify></app-spotify>\n      <br />\n      <app-twitter-feed>\n      </app-twitter-feed>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spotify',\n  templateUrl: './spotify.component.html',\n  styleUrls: ['./spotify.component.css']\n})\nexport class SpotifyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n  <!-- Component title. -->\n  <div class=\"widget-title\">\n    <a href=\"https://open.spotify.com/artist/3Nrfpe0tUJi4K4DXYWgMUX\" title=\"BTS's Spotify Page\">Spotify</a>\n  </div>\n  <!-- Spotify embed. -->\n  <div class=\"spotify-container\">\n    <iframe\n      src=\"https://open.spotify.com/embed/artist/3Nrfpe0tUJi4K4DXYWgMUX\"\n      frameborder=\"0\"\n      allowtransparency=\"true\"\n      allow=\"encrypted-media\"\n    >\n    </iframe>\n  </div>\n  <!-- Timestamp -->\n  <div class=\"timestamp\">Updated on \"Holder\"</div>\n</body>\n","import { WikipediaDataService } from 'src/app/wikipedia-data.service';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TwitterFeedComponent } from './twitter-feed/twitter-feed.component';\nimport { YoutubeComponent } from './youtube/youtube.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { WikipediaComponent } from './wikipedia/wikipedia.component';\nimport { SpotifyComponent } from './spotify/spotify.component';\n\nconst appRoutes: Routes = [\n  {\n  path: 'tweets',\n  component: TwitterFeedComponent\n  },\n  {\n    path: '',\n    redirectTo: '',\n    pathMatch: 'full',\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TwitterFeedComponent,\n    YoutubeComponent,\n    NavBarComponent,\n    WikipediaComponent,\n    SpotifyComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [WikipediaDataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","<script type=\"module\" src=\"./5-3/1/bts-verse/src/app/twitter-feed/twitter.js\"></script>\n\n<body>\n  <div class=\"widget-title\"><a href=\"https://twitter.com/BTS_twt\" title=\"BTS's Twitter Page\">Twitter</a></div>\n  <h4>\n    <a\n      class=\"twitter-timeline\"\n      href=\"https://twitter.com/BTS_twt?ref_src=twsrc%5Etfw\"\n      >Tweets by BTS_twt</a\n    >\n    <!-- <script\n      async\n      src=\"https://platform.twitter.com/widgets.js\"\n      charset=\"utf-8\"\n    ></script> -->\n    Tweet\n  </h4>\n  <br/>\n<div class = \"card\">\n  <script src = \"./twitter.js\"></script>\n  <div *ngIf=\"undefined === this.timeline\">Loading...</div>\n  <div *ngIf=\"undefined !== this.timeline\">\n  <ng-container *ngFor=\"let tweets of this.timeline.data; let i = index\">\n  <h3><div class=\"center\">Tweet {{i + 1}}</div></h3>\n  <p>Tweet: {{tweets.full_text}}</p>\n  <p>Name: {{tweets.user.name}}</p>\n  <p>Screenname: {{tweets.user.screen_name}}</p>\n  <p>Number of Favorites: {{tweets.favorite_count}}</p>\n  <p>Number of Retweets: {{tweets.retweet_count}}</p>\n  <p>Bio: {{tweets.user.description}}</p>\n  <p>Timestamp: {{tweets.created_at}}</p>\n\n  <br>\n\n\n</ng-container>\n</div>\n</div>\n</body>\n\n  <!-- <script>\n    !(function (d, s, id) {\n      var js,\n        fjs = d.getElementsByTagName(s)[0],\n        p = /^http:/.test(d.location) ? \"http\" : \"https\";\n      if (!d.getElementById(id)) {\n        js = d.createElement(s);\n        js.id = id;\n        js.src = p + \"://platform.twitter.com/widgets.js\";\n        fjs.parentNode.insertBefore(js, fjs);\n      }\n    })(document, \"script\", \"twitter-wjs\");\n  </script>\n</body> -->\n","import { Component, OnInit } from '@angular/core';\nimport { TwitterService } from './twitterservice.service';\n\ndeclare function parser() : any; \ndeclare function create() : any;\n\n@Component({\n  selector: 'app-twitter-feed',\n  templateUrl: './twitter-feed.component.html',\n  styleUrls: ['./twitter-feed.component.css']\n})\nexport class TwitterFeedComponent implements OnInit {\n  timeline: any;\n  constructor(private api: TwitterService) {\n   }\n\n  ngOnInit() {\n    //create();\n    //parser();\n    this.getTwitterTimeline();\n    \n  }\n\n  getTwitterTimeline(): void  {\n    //create();\n    //parser();\n    this.api.getTimeline()\n    .subscribe(\n      timeline => {\n        this.timeline = timeline;\n        console.log(this.timeline);\n        \n      }\n    )\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}