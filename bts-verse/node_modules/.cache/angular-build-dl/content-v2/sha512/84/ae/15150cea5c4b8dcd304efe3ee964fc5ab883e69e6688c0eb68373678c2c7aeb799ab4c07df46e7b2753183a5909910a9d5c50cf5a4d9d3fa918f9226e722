{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/nav-bar/nav-bar.component.ts","webpack:///src/app/nav-bar/nav-bar.component.html","webpack:///src/app/spotify/spotify.component.ts","webpack:///src/app/spotify/spotify.component.html","webpack:///src/app/twitter-feed/twitter-feed.component.ts","webpack:///src/app/twitter-feed/twitter-feed.component.html","webpack:///src/app/twitter-feed/twitterservice.service.ts","webpack:///src/app/wikipedia-data.service.ts","webpack:///src/app/wikipedia/wikipedia.component.ts","webpack:///src/app/wikipedia/wikipedia.component.html","webpack:///src/app/youtube/youtube.component.ts","webpack:///src/app/youtube/youtube.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","AppRoutingModule","forRoot","imports","AppComponent","title","loadScript","dynamicScripts","i","length","node","document","createElement","src","type","async","getElementsByTagName","appendChild","selector","templateUrl","styleUrls","appRoutes","path","component","redirectTo","pathMatch","AppModule","declarations","providers","bootstrap","NavBarComponent","SpotifyComponent","TwitterFeedComponent","api","getTwitterTimeline","getTimeline","subscribe","timeline","console","log","TwitterService","http","apiURL","get","responseType","pipe","data","providedIn","WikipediaDataService","WIKI_URL","observe","WikipediaComponent","wikipediaService","extractHtml","timestamp","thumbnail","source","width","height","getRequest","extract_html","YoutubeComponent","environment","production","bootstrapModule","err","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bts-verse';\n\n  constructor() {\n    this.loadScript();\n  }\n\n  loadScript() {\n  \n    // This array contains all the files/CDNs\n    const dynamicScripts = [\n       'twitter-feed/twitter.js'\n    ];\n    for (let i = 0; i < dynamicScripts.length; i++) {\n      const node = document.createElement('script');\n      node.src = dynamicScripts[i];\n      node.type = 'text/javascript';\n      node.async = true;\n      document.getElementsByTagName('head')[0].appendChild(node);\n    }\n  }\n}\n","<body>\n<app-nav-bar></app-nav-bar>\n  <div class=\"row\">\n    <div class=\"column\">\n      <app-youtube></app-youtube>\n      <br />\n      <app-spotify></app-spotify>\n      <br />\n      <app-wikipedia></app-wikipedia>\n    </div>\n    <div class=\"column\">\n      <app-twitter-feed></app-twitter-feed>\n    </div>\n  </div>\n  <router-outlet></router-outlet>\n</body>\n","/** @RH_RANTWORKS */\n\nimport { WikipediaDataService } from 'src/app/wikipedia-data.service';\nimport { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { TwitterFeedComponent } from './twitter-feed/twitter-feed.component';\nimport { YoutubeComponent } from './youtube/youtube.component';\nimport { NavBarComponent } from './nav-bar/nav-bar.component';\nimport { WikipediaComponent } from './wikipedia/wikipedia.component';\nimport { SpotifyComponent } from './spotify/spotify.component';\n\nconst appRoutes: Routes = [\n  {\n  path: 'tweets',\n  component: TwitterFeedComponent\n  },\n  {\n    path: '',\n    redirectTo: '',\n    pathMatch: 'full',\n  }\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    TwitterFeedComponent,\n    YoutubeComponent,\n    NavBarComponent,\n    WikipediaComponent,\n    SpotifyComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    AppRoutingModule,\n  ],\n  providers: [WikipediaDataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-nav-bar',\n  templateUrl: './nav-bar.component.html',\n  styleUrls: ['./nav-bar.component.css']\n})\nexport class NavBarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<!-- @RH_RANTWORKS -->\n\n<!-- Creates the header. -->\n<div class=\"header\">\n  <!-- Site icon and name. -->\n  <img class=\"logo\" src=\"assets/images/bts-verse-logo.png\" alt=\"Logo\" />\n    BTS-VERSE\n  <div class=\"icon-bar\">\n    <a href=\"https://twitter.com/bts_twt\" target=\"_blank\">\n      <img class=\"icon\" src=\"assets/images/twitter.png\" alt=\"BTS's Twitter\" />\n    </a>\n    <a href=\"https://www.facebook.com/bangtan.official/\" target=\"_blank\">\n      <img class=\"icon\" src=\"assets/images/facebook.png\" alt=\"BTS's Facebook\" />\n    </a>\n    <a href=\"https://www.instagram.com/bts.bighitofficial/\" target=\"_blank\">\n      <img class=\"icon\" src=\"assets/images/instagram.png\" alt=\"BTS's Instagram\" />\n    </a>\n    <a href=\"https://open.spotify.com/artist/3Nrfpe0tUJi4K4DXYWgMUX\" target=\"_blank\">\n      <img class=\"icon\" src=\"assets/images/spotify.png\" alt=\"BTS's Spotify\" />\n    </a>\n    <a href=\"http://soundcloud.com/bangtan\" target=\"_blank\">\n      <img class=\"icon\" src=\"assets/images/soundcloud.png\" alt=\"BTS's SoundCloud\" />\n    </a>\n    <a href=\"https://www.youtube.com/user/BANGTANTV\" target=\"_blank\">\n      <img class=\"icon\" src=\"assets/images/youtube.png\" alt=\"BTS's Youtube\" />\n    </a>\n    <a href=\"https://www.tiktok.com/@bts_official_bighit\" target=\"_blank\">\n      <img class=\"icon\" src=\"assets/images/tiktok.png\" alt=\"BTS's Tiktok\" />\n    </a>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-spotify',\n  templateUrl: './spotify.component.html',\n  styleUrls: ['./spotify.component.css']\n})\nexport class SpotifyComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n  <!-- @RH_RANTWORKS -->\n  <!-- Component title. -->\n  <div class=\"widget-title\">\n    Spotify\n    <a\n      href=\"https://open.spotify.com/artist/3Nrfpe0tUJi4K4DXYWgMUX\"\n      target=\"_blank\"\n    >\n      <img class=\"icon\" src=\"assets/images/spotify.png\" alt=\"BTS's Spotify\" />\n    </a>\n  </div>\n  <!-- @NMK_RANTWORKS -->\n  <!-- Spotify embed. -->\n  <div class=\"spotify-container\">\n    <iframe\n      src=\"https://open.spotify.com/embed/artist/3Nrfpe0tUJi4K4DXYWgMUX\"\n      frameborder=\"0\"\n      allowtransparency=\"true\"\n      allow=\"encrypted-media\"\n    >\n    </iframe>\n  </div>\n  <!-- Timestamp -->\n  <div class=\"timestamp\">Updated on \"Holder\"</div>\n</body>\n","import { Component, OnInit } from '@angular/core';\nimport Tweet from './Tweets';\nimport { TwitterService } from './twitterservice.service';\n\ndeclare function parser(): any;\ndeclare function getRecords(name: any): any;\ndeclare var Tweets: Tweet[];\ndeclare var data: any;\n\n@Component({\n  selector: 'app-twitter-feed',\n  templateUrl: './twitter-feed.component.html',\n  styleUrls: ['./twitter-feed.component.css'],\n})\nexport class TwitterFeedComponent implements OnInit {\n  data: any;\n  timeline: any;\n  holder: any;\n  constructor(private api: TwitterService) {}\n\n  ngOnInit(): void {\n    this.getTwitterTimeline();\n  }\n\n  // setTwitterTimeline() : void {\n  //   var Tweets = [];\n  //   var db1 = new Database();\n  //   db1.Connector();\n  //   db1.connect();\n  //   this.data = db1.getRecords('TwitterData');\n  //   for (let i = 0; i < this.data.length; i++) {\n  //     var temp = new Tweet();\n  //       temp.profile_picture = this.data[i].user.profile_picture,\n  //       temp.user_name = this.data[i].user.name,\n  //       temp.screen_name = this.data[i].screen_name,\n  //       temp.full_text = this.data[i].full_text,\n  //       temp.favorites = this.data[i].favorite_count,\n  //       temp.retweets = this.data[i].retweet_count,\n  //       temp.created_at = this.data[i].created_at,\n  //       Tweets.push(temp);\n  //       }\n  //       this.timeline = Tweets;\n  //       console.log(this.timeline);\n  //       db1.quit();\n  //   }\n\n  getTwitterTimeline(): void {\n    // create();\n    // parser();\n    this.api.getTimeline().subscribe((timeline: any) => {\n      this.timeline = timeline;\n      console.log(this.timeline);\n    });\n  }\n}\n","<body>\n  <div class=\"widget-title\">\n    Twitter\n    <a href=\"https://twitter.com/bts_twt\" target=\"_blank\">\n      <img class=\"icon\" src=\"assets/images/twitter.png\" alt=\"BTS's Twitter\" />\n    </a>\n  </div>\n  <h4>\n    <p\n      class=\"twitter-timeline\"\n      href=\"https://twitter.com/BTS_twt?ref_src=twsrc%5Etfw\"\n      target=\"_blank\"\n    >\n      Tweets by @BTS_twt and @BTS_bighit:\n    </p>\n  </h4>\n\n  <br />\n  <div *ngIf=\"undefined === this.timeline\">Loading...</div>\n  <div *ngIf=\"undefined !== this.timeline\">\n    <div class=\"card-container\">\n      <ng-container *ngFor=\"let tweets of this.timeline; let i = index\">\n        <div class=\"card\">\n          <br />\n          <h3>\n            <div class=\"center\">Tweet {{ i + 1 }}</div>\n          </h3>\n          <p>\n            <img src=\"{{ tweets.profile_picture }}\" />\n            {{ tweets.userName }}\n          </p>\n          <p>@{{ tweets.screen_name }}</p>\n          <p>Tweeted: {{ tweets.fullText }}</p>\n          <p>\n            <img src=\"./assets/images/Likes.png\" width=\"35\" height=\"35\" />{{\n              tweets.favorites\n            }}\n\n            &nbsp;\n\n            <img src=\"./assets/images/Retweets.jpg\" width=\"30\" height=\"30\" />\n            {{ tweets.retweets }}\n          </p>\n          <p>Created at: {{ tweets.createdAt }}</p>\n\n          <br />\n        </div>\n      </ng-container>\n    </div>\n    <div class=\"timestamp\">Last Retrieved: {{ \"12:00pm EST\" }}</div>\n  </div>\n</body>\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Parser } from '@angular/compiler';\nimport { Injectable } from '@angular/core';\nimport { map } from 'rxjs/internal/operators/map';\n\ndeclare function listener(): any;\n@Injectable({\n  providedIn: 'root',\n})\nexport class TwitterService {\n  apiURL = 'http://localhost:3000';\n  constructor(private http: HttpClient) {}\n\n  getTimeline(): any {\n    return this.http.get<any[]>(this.apiURL + '/user_timeline', {\n      responseType: 'json',\n    });\n    // .pipe(map(data => data));\n  }\n\n  getMentions(): any {\n    return this.http\n      .get<any[]>(this.apiURL + '/mentions_timeline')\n      .pipe(map((data) => data));\n  }\n}\n","/** @RH_RANTWORKS */\n\nimport { Config } from './wikipedia/config';\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpClientJsonpModule } from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\nimport { catchError, map, tap } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class WikipediaDataService {\n\n  private WIKI_URL = 'https://en.wikipedia.org/api/rest_v1/page/summary/BTS';\n\n  constructor(\n    private http: HttpClient,\n  ) {}\n\n  public getRequest(): any {\n    return this.http.get<Config>(this.WIKI_URL, {observe: 'body', responseType: 'json'});\n  }\n\n}\n\n\n","/** @RH_RANTWORKS */\n\nimport { Config } from './config';\nimport { Component, OnInit } from '@angular/core';\nimport { WikipediaDataService } from 'src/app/wikipedia-data.service';\n\n@Component({\n  selector: 'app-wikipedia',\n  templateUrl: './wikipedia.component.html',\n  styleUrls: ['./wikipedia.component.css'],\n})\nexport class WikipediaComponent implements OnInit {\n  extractHtml: string;\n  timestamp: string;\n  thumbnail: {\n    source: string;\n    width: number;\n    height: number;\n  };\n\n  constructor(private wikipediaService: WikipediaDataService) {\n    /** Default values are set to errors in case the HTTP request is unsuccessful. */\n    this.extractHtml = 'error - unable to retrieve data';\n    this.timestamp = 'error - unable to retrieve data';\n    this.thumbnail = {\n      source: 'error - unable to retrieve data',\n      width: 0,\n      height: 0,\n    };\n  }\n\n  ngOnInit(): void {\n    /** Get the request from the wikipedia service and assign data to the Config interface for parsing. */\n    this.wikipediaService.getRequest().subscribe((data: Config) => {\n      (this.thumbnail = data.thumbnail),\n        (this.extractHtml = data.extract_html),\n        (this.timestamp = data.timestamp);\n    });\n  }\n}\n","<!-- @RH_RANTWORKS -->\n\n<body>\n  <!-- Card title. -->\n  <div class=\"widget-title\">\n    About BTS\n  </div>\n  <blockquote class=\"summary\">From Wikipedia, the free encyclopedia</blockquote>\n  <!-- Article body. -->\n  <div class=\"article\">\n    <img class=\"text-wrap\" alt=\"Image of BTS\" src=\"{{ thumbnail.source }}\" />\n    <div [innerHTML]=\"extractHtml\"></div>\n  </div>\n  <!-- Timestamp of retrevial. -->\n  <div class=\"timestamp\">Retrieved from <a href=\"https://en.wikipedia.org/wiki/BTS \" target=\"_blank\" title=\"BTS's Wikipedia Page\"\n    >Wikipedia</a> on {{ timestamp }}</div>\n</body>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-youtube',\n  templateUrl: './youtube.component.html',\n  styleUrls: ['./youtube.component.css']\n})\nexport class YoutubeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<body>\n  <!-- Card title -->\n  <div class=\"widget-title\">\n    YouTube\n    <a href=\"https://www.youtube.com/user/BANGTANTV\" target=\"_blank\">\n      <img class=\"icon\" src=\"assets/images/youtube.png\" alt=\"BTS's Youtube\" />\n    </a>\n  </div>\n  <!-- Youtube container -->\n  <div class=\"youtube-video-container\">\n    <iframe\n      src=\"https://www.youtube.com/embed?max-results=0&controls=1&showinfo=1&rel=0&listType=user_uploads&list=BANGTANTV\"\n      allowfullscreen\n    >\n    </iframe>\n  </div>\n  <!-- Timestamp -->\n  <div class=\"timestamp\">Updated on \"Holder\"</div>\n</body>\n\n<!-- Youtube Script -->\n<script>\n  // 2. This code loads the IFrame Player API code asynchronously.\n  var tag = document.createElement(\"script\");\n\n  tag.src = \"https://www.youtube.com/iframe_api\";\n  var firstScriptTag = document.getElementsByTagName(\"script\")[0];\n  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n  // 3. This function creates an <iframe> (and YouTube player)\n  //    after the API code downloads.\n  var player;\n  function onYouTubeIframeAPIReady() {\n    player = new YT.Player(\"player\", {\n      videoId: \"M7lc1UVf-VE\",\n      events: {\n        onReady: onPlayerReady,\n        onStateChange: onPlayerStateChange,\n      },\n    });\n  }\n\n  // 4. The API will call this function when the video player is ready.\n  function onPlayerReady(event) {\n    event.target.playVideo();\n  }\n\n  // 5. The API calls this function when the player's state changes.\n  //    The function indicates that when playing a video (state=1),\n  //    the player should play for six seconds and then stop.\n  var done = false;\n  function onPlayerStateChange(event) {\n    if (event.data == YT.PlayerState.PLAYING && !done) {\n      setTimeout(stopVideo, 6000);\n      done = true;\n    }\n  }\n  function stopVideo() {\n    player.stopVideo();\n  }\n</script>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}