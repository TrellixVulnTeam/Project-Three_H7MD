{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app-routing.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,MAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;;;;;;;ACR5D,MAAM,YAAY;IALzB;QAME,UAAK,GAAG,WAAW,CAAC;KACrB;;wEAFY,YAAY;4FAAZ,YAAY;QCQzB,uEAAM;QACJ,qEAA4E;QAC5E,qEAA6E;QAM/E,4DAAO;QAEP,uEAAM;QACN,wEAAoB;QAChB,8EACF;QAAA,4DAAK;QAEL,oEAAG;QAEH,uEAAM;QAAA,oEAAS;QAAA,4DAAO;QACpB,gEAAI;QACN,+EAC6C;QAC7C;QAAA,4DAAW;QACX,iEAAI;QACF,iEAAI;QACH,wEAAM;QAAA,2EAAe;QAAA,4DAAO;QAC7B,iEAAI;QACJ,+EACmC;QACvC;QAAA,4DAAW;QACT,iEAAI;QACF,iEAAI;QACN,wEAAM;QAAA,qEAAS;QAAA,4DAAO;QACpB,iEAAI;QACN,+EACgD;QAChD;QAAA,4DAAW;QACX,iEAAI;QACJ,iEAAI;QACH,wEAAM;QAAA,6EAAiB;QAAA,4DAAO;QAC7B,iEAAI;QACN,+EACiD;QACjD;QAAA,4DAAW;QACX,iEAAI;QACJ,iEAAI;QAEJ,6EAAsB;QACpB,8EACF;QAAA,4DAAS;QACP,6EAAsB;QACtB,sFACF;QAAA,4DAAS;QACT,6EAAsB;QACpB,8EACF;QAAA,4DAAS;QACT,4DAAI;QACN,4DAAO;QAYP,4EAA+B;;;;;;;;;;;;;;AClF/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAA0D;AAEF;AACT;;AAaxC,MAAM,SAAS;;kEAAT,SAAS;wFAAT,SAAS,cAFR,2DAAY;6FADb,EAAE,YAJJ;YACP,uEAAa;YACb,oEAAgB;SACjB;mIAIU,SAAS,mBATlB,2DAAY,aAGZ,uEAAa;QACb,oEAAgB;;;;;;;;;;;;;ACXpB;AAAA;AAAA;AAAA;AAAuD;;;AAEvD,MAAM,MAAM,GAAW,EAAE,CAAC;AAMnB,MAAM,gBAAgB;;gFAAhB,gBAAgB;+FAAhB,gBAAgB;mGAHlB,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC,EAC7B,4DAAY;mIAEX,gBAAgB,uFAFjB,4DAAY;;;;;;;;;;;;;;;;;;;ACPuB;AAGF;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,2EAAwB,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,GAAG,CAAC,EAAE,CAAC,OAAO,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC;;;;;;;;;;;;ACXpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,qC","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'bts-verse';\n}\n","<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content below * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * Delete the template below * * * * * * * * * * -->\n<!-- * * * * * * * to get started with your project! * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<style>\n  body {background-color: lavender;}\n  h1   { text-align: center; font-family: 'Mogra';}\n  p    {color: black; text-align: center;  font-size: 16px}\n</style>\n\n<head>\n  <link href='https://fonts.googleapis.com/css?family=Mogra' rel='stylesheet'>\n  <link href='https://fonts.googleapis.com/css?family=Roboto' rel='stylesheet'>\n<style>\nbody {background-color: lavender;}\nh1   { text-align: center; font-family: 'Mogra';}\np    {color: black; text-align: center;  font-size: 16px}\n</style>\n</head>\n\n<body>\n<h1 class = \"title\">\n    Create an Account\n  </h1>\n\n  <p>\n\n  <span>Username </span>\n    <br>\n  <textarea \n            name=\"LoginBox\" cols=\"50\" rows=\"1\"> \n  </textarea>\n  <br>\n    <br>\n     <span>E-mail Address </span>\n    <br>\n    <textarea \n    name=\"EmailBox\" cols=\"50\" rows=\"1\"> \n</textarea>\n  <br>\n    <br>\n  <span>Password </span>\n    <br>\n  <textarea \n            name=\"PasswordBox\" cols=\"50\" rows=\"1\"> \n  </textarea>\n  <br>\n  <br>\n   <span>Confirm Password </span>\n    <br>\n  <textarea \n            name=\"PasswordBox2\" cols=\"50\" rows=\"1\"> \n  </textarea>\n  <br>\n  <br>\n\n  <button type=\"button\">\n    Forget Password?\n  </button>\n    <button type=\"button\">\n    Already Have an Account?\n  </button>\n  <button type=\"button\">\n    Back to Homepage\n  </button>\n  </p>\n</body>\n\n\n\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * The content above * * * * * * * * * * * -->\n<!-- * * * * * * * * * * is only a placeholder * * * * * * * * * * -->\n<!-- * * * * * * * * * * and can be replaced. * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n<!-- * * * * * * * * * * End of Placeholder * * * * * * * * * * * -->\n<!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * -->\n\n<router-outlet></router-outlet>\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}